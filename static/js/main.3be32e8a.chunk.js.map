{"version":3,"sources":["components/Cards/Cards.module.css","logo.svg","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","App.js","reportWebVitals.js","index.js","components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","a","axios","get","response","modifiedData","fetchDailyData","map","total","date","reportDate","Charts","useState","dailyData","setDailyData","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","App","state","fetchedData","this","setState","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3be32e8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\"   \n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <CountUp\n              start={0}\n              end={confirmed.value}\n              duration={2.5}\n              separator=\",\"\n            />\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID 19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <CountUp\n              start={0}\n              end={recovered.value}\n              duration={2.5}\n              separator=\",\"\n            />\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID 19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <CountUp\n              start={0}\n              end={deaths.value}\n              duration={2.5}\n              separator=\",\"\n            />\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths due to COVID 19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async () => {\n  try {\n    const response = await axios.get(url);\n    const modifiedData = {\n      confirmed: response.data.confirmed,\n      recovered: response.data.recovered,\n      deaths: response.data.deaths,\n      lastUpdate: response.data.lastUpdate,\n    };\n    return modifiedData;\n  } catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((data) => ({\n      confirmed: data.confirmed.total,\n      deaths: data.deaths.total,\n      date:data.reportDate,\n    }));\n    return modifiedData; \n  } catch (error) {}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Charts.module.css\";\n\nconst Charts = () => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n    console.log(dailyData);\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({date}) => date),\n        datasets: [{\n          data: dailyData.map(({confirmed}) => confirmed),\n          label: 'Infected',\n          borderColor: '#3333ff',\n          fill: true\n        }, {\n          data: dailyData.map(({deaths}) => deaths),\n          label: 'Infected',\n          borderColor: 'red',\n          backgroundColor: 'rgba(255,0,0,0.5)',\n          fill: true\n        }],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>\n      {lineChart}\n    </div>\n\n  );\n};\n\nexport default Charts;\n","import logo from \"./logo.svg\";\nimport React from \"react\";\nimport Cards from \"./components/Cards/Cards\";\nimport Charts from \"./components/Charts/Charts\";\nimport CountyPicker from \"./components/CountryPicker/CountryPicker\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n    console.log(\"ddata\", fetchedData);\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <>\n      <h1>Covid Tracker</h1>\n      <div className={styles.container}>\n        \n        <br></br>\n        <Cards data={data}></Cards>\n        {/* <CountyPicker></CountyPicker> */}\n        <Charts></Charts>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}